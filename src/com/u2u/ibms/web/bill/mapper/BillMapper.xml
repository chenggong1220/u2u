<?xml version="1.0" encoding="UTF-8" ?>


<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.u2u.ibms.web.bill.mapper.BillMapper">

	<resultMap id="bill" type="com.u2u.ibms.web.bill.bean.Bill"
		extends="baseBean">
		<result property="id" jdbcType="INTEGER" column="id" />
		<result property="accountNum" jdbcType="INTEGER" column="account_num" />
		<result property="accountName" jdbcType="VARCHAR" column="account_name" />
		<result property="cusName" jdbcType="VARCHAR" column="cus_name" />
		<result property="cusNum" jdbcType="VARCHAR" column="cus_num" />
		<result property="dealDate" jdbcType="VARCHAR" column="deal_date" />
		<result property="amount" jdbcType="VARCHAR" column="amount" />
		<result property="billingDate" jdbcType="VARCHAR" column="billing_date" />
		<result property="billingStatus" jdbcType="TINYINT" column="billing_status" />
		<result property="status" jdbcType="TINYINT" column="status" />
		<result property="contractId" jdbcType="TINYINT" column="contract_id" />
		<result property="contractNo" jdbcType="VARCHAR" column="contract_no" />
		<result property="billCheckId" jdbcType="TINYINT" column="bill_check_id" />
		<result property="deposit" jdbcType="TINYINT" column="deposit" />
		<result property="financialNum" jdbcType="VARCHAR" column="financial_num" />
		<result property="bankSerialNumber" jdbcType="VARCHAR" column="bank_Serial_Number" />
		<result property="remark" jdbcType="VARCHAR" column="remark" />
	</resultMap>

	<sql id="BASE_BILL_SQL">
		account_num,
		account_name,
		cus_name,
		cus_num,
		deal_date,
		amount,
		billing_date,
		billing_status,
		status,
		contract_id,
		deposit,
		financial_num,
		bank_Serial_Number,
		remark,
		<include refid="BASE_BEAN_SQL" />
	</sql>

	<select id="getAll" resultMap="bill">
		SELECT
		ID,
		<include refid="BASE_BILL_SQL" />
		FROM
		T_BILL
		<where>
			<if test="accountNum!=null">
				AND account_num like concat('%',#{accountNum},'%')
			</if>
			<if test="accountName!=null">
				AND account_name like concat('%',#{accountName},'%')
			</if>
			<if test="cusName!=null">
				AND cus_name like concat('%',#{cusName},'%')
			</if>
			<if test="cusNum!=null">
				AND cus_num like concat('%',#{cusNum},'%')
			</if>
			<if test="status!=null">
				AND status = #{status}
			</if>
			<if test="billingStatus!=null">
				AND billing_status = #{billingStatus}
			</if>
			<if test="bankSerialNumber!=null">
				AND bank_Serial_Number like
				concat('%',#{bankSerialNumber},'%')
			</if>
			<if test="startDate!=null">
				and deal_date &gt;= #{startDate}
			</if>
			<if test="endDate!=null">
				and deal_date &lt;= #{endDate}
			</if>
		</where>
		ORDER BY T_BILL.DEAL_DATE DESC
	</select>

	
	<!-- Start: Added for billing details report, SUNZHE, 2017-10-25 -->
	<select id="getContractBill" resultMap="bill">
		SELECT
		B.ID,
		B.account_num,
		B.account_name,
		B.cus_name,
		B.cus_num,
		left(B.deal_date,10) as deal_date,
		B.amount,
		B.billing_date,
		B.billing_status,
		B.status,
		B.contract_id,
		B.deposit,
		B.financial_num,
		B.bank_Serial_Number,
		B.remark,		
		B.CREATE_DATE,
		B.OPERATE_DATE,
		C.contract_id as contract_no 
		FROM
		T_CONTRACT C LEFT JOIN T_BILL B ON
		C.id = B.contract_id 
		<where>
			<if test="company!=null">
				and LENGTH(cus_name) &gt;= 15
			</if>	
			<if test="personal!=null">
				and LENGTH(cus_name) &lt;= 12
			</if> 		    
			<if test="billingMonth!=null">
				AND LEFT(B.deal_date,7) = #{billingMonth}
			</if>			    
			<if test="billType!=null">
				AND B.deposit = #{billType}
			</if>		    
			<if test="contractNo!=null">
				AND C.contract_id like concat('%',#{contractNo},'%')
			</if>		    
			<if test="accountNum!=null">
				AND B.account_num like concat('%',#{accountNum},'%')
			</if>
			<if test="accountName!=null">
				AND B.account_name like concat('%',#{accountName},'%')
			</if>
			<if test="cusName!=null">
				AND B.cus_name like concat('%',#{cusName},'%')
			</if>
			<if test="cusNum!=null">
				AND B.cus_num like concat('%',#{cusNum},'%')
			</if>
			<if test="status!=null">
				AND status = #{status}
			</if>
			<if test="billingStatus!=null">
				AND B.billing_status = #{billingStatus}
			</if>
			<if test="bankSerialNumber!=null">
				AND B.bank_Serial_Number like
				concat('%',#{bankSerialNumber},'%')
			</if>
			<if test="startDate!=null">
				and B.deal_date &gt;= #{startDate}
			</if>
			<if test="endDate!=null">
				and B.deal_date &lt;= #{endDate}
			</if>
		</where>
		ORDER BY B.DEAL_DATE DESC
	</select>	
	<!-- End: Added for billing details report, SUNZHE, 2017-10-25 -->
	
	<!-- Start: Get one bill record, by SUNZHE, 2017-01-19 -->
	<select id="getOne" resultMap="bill">
		SELECT
		ID,
		<include refid="BASE_BILL_SQL" />
		FROM
		T_BILL
		<where>
			bank_Serial_Number = #{bankSerialNumber}
		</where>
	</select>
	<!-- End: Get one bill record, by SUNZHE, 2017-01-19 -->

	<select id="getById" resultMap="bill">
		SELECT
		ID,
		<include refid="BASE_BILL_SQL" />
		FROM
		T_BILL
		WHERE
		ID = #{id}
	</select>

	<insert id="insert">
		INSERT INTO T_BILL
		(
		<include refid="BASE_BILL_SQL" />
		)
		VALUES
		(
		#{accountNum},
		#{accountName},
		#{cusName},
		#{cusNum},
		#{dealDate},
		#{amount},
		#{billingDate},
		#{billingStatus},
		#{status},
		#{deposit},
		#{financialNum},
		#{bankSerialNumber},
		#{remark},
		#{createDate},
		#{operateDate}
		)
	</insert>

	<update id="update">
		UPDATE T_BILL
		SET
		account_num = #{accountNum},
		account_name = #{accountName},
		cus_name = #{cusName},
		cus_num = #{cusNum},
		deal_date = #{dealDate},
		amount = #{amount},
		billing_date = #{billingDate},
		billing_status = #{billingStatus},
		status = #{status},
		financial_num = #{financialNum},
		contract_id = #{contractId},
		bill_check_id = #{billCheckId},
		deposit = #{deposit},
		remark = #{remark},
		create_date = #{createDate},
		operate_date = #{operateDate}
		where
		id = #{id}
	</update>

	<delete id="delete">
		DELETE FROM T_BILL
		WHERE ID = #{id}
	</delete>

</mapper>
